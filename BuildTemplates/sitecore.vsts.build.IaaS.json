{
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "764936",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "5d58cc01-7c75-450c-be18-a388ddb129ec"
      },
      "inputs": {
        "branchFilters": "[\"+refs/heads/*\"]",
        "additionalFields": "{}"
      }
    }
  ],
  "triggers": [
    {
      "branchFilters": [
        "+refs/heads/master"
      ],
      "pathFilters": [],
      "batchChanges": true,
      "maxConcurrentBuildsPerBranch": 1,
      "triggerType": 2
    }
  ],
  "variables": {
    "BuildPlatform": {
      "value": "Any CPU"
    },
	"BuildConfiguration": {
      "value": "Release"
    },
    "CullProjectFiles": {
      "value": "False",
      "allowOverride": true
    },
    "EnableGitDeltaDeploy": {
      "value": "False",
      "allowOverride": true
    },
    "LastDeploymentGitTagName": {
      "value": "ProductionRelease"
    },
    "LastProductionReleaseCommitId": {
      "value": ""
    },
    "system.debug": {
      "value": "true",
      "allowOverride": true
    },
    "TDS_Key":{  
	  "value":"KEY"
    },
    "TDS_OWNER":{  
	  "value":"OWNER"
    }
  },
  "variableGroups": [],
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [],
      "artifactTypesToDelete": [
        "FilePath",
        "SymbolStore"
      ],
      "daysToKeep": 10,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "properties": {},
  "tags": [],
  "_links": {},
  "jobAuthorizationScope": 1,
  "jobTimeoutInMinutes": 60,
  "jobCancelTimeoutInMinutes": 5,
  "process": {
    "phases": [
      {
        "steps": [
		   {  
			  "environment":{  

			  },
			  "enabled":true,
			  "continueOnError":false,
			  "alwaysRun":false,
			  "displayName":"Download GeekHive Scripts",
			  "timeoutInMinutes":0,
			  "condition":"succeeded()",
			  "task":{  
				 "id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
				 "versionSpec":"2.*",
				 "definitionType":"task"
			  },
			  "inputs":{  
				 "targetType":"inline",
				 "filePath":"",
				 "arguments":"",
				 "script":"# --- Set the uri for the latest release\n$URI = \"https://api.github.com/repos/GeekHive/SitecoreVSTS/zipball\"\n\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n\n$OutputPath = \"$((Get-Location).Path)\\scripts.zip\"\n\n# --- Query the API to get the url of the zip\nInvoke-WebRequest -Uri $URI -OutFile $OutputPath\n\nAdd-Type -AssemblyName System.IO.Compression.FileSystem\nfunction Unzip\n{\n    param([string]$zipfile, [string]$outpath)\n\n    [System.IO.Compression.ZipFile]::ExtractToDirectory($zipfile, $outpath)\n}\n\nUnzip $OutputPath \"$((Get-Location).Path)\"\n\n$directory = Get-ChildItem -Directory | Select-Object -First 1\n\n$sourceDirectory = \"$((Get-Location).Path)\\$directory\"\n\n\"$($sourceDirectory)\"\n\n$destinationDirectory = \"$((Get-Location).Path)\"\n\n\"$($destinationDirectory)\"\n\nRename-Item -Path $sourceDirectory -NewName \"SitecoreVSTS\"",
				 "errorActionPreference":"stop",
				 "failOnStderr":"false",
				 "ignoreLASTEXITCODE":"false",
				 "workingDirectory":"$(Build.ArtifactStagingDirectory)"
			  }
		   },
		  {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "NuGet restore **\\*.sln",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "refName": "NuGetInstaller_1",
            "task": {
              "id": "333b11bd-d341-40d9-afcf-b32d5ce6f23b",
              "versionSpec": "2.*",
              "definitionType": "task"
            },
            "inputs": {
              "command": "restore",
              "solution":"$(Parameters.solution)",
              "selectOrConfig": "select",
              "feedRestore": "",
              "includeNuGetOrg": "true",
              "nugetConfigPath": ".nuget\\nuget.config",
              "externalEndpoints": "",
              "noCache": "true",
              "disableParallelProcessing": "false",
              "packagesDirectory": "",
              "verbosityRestore": "Detailed",
              "searchPatternPush": "$(Build.ArtifactStagingDirectory)/*.nupkg",
              "nuGetFeedType": "internal",
              "feedPublish": "",
              "allowPackageConflicts": "false",
              "externalEndpoint": "",
              "verbosityPush": "Detailed",
              "searchPatternPack": "**/*.csproj",
              "configurationToPack": "$(BuildConfiguration)",
              "outputDir": "$(Build.ArtifactStagingDirectory)",
              "versioningScheme": "off",
              "includeReferencedProjects": "false",
              "versionEnvVar": "",
              "requestedMajorVersion": "1",
              "requestedMinorVersion": "0",
              "requestedPatchVersion": "0",
              "packTimezone": "utc",
              "includeSymbols": "false",
              "toolPackage": "false",
              "buildProperties": "",
              "basePath": "",
              "verbosityPack": "Detailed",
              "arguments": ""
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Build solution **\\*.sln",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "refName": "VSBuild_2",
            "task": {
              "id": "71a9a2d3-a98a-4caa-96ab-affca411ecda",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "solution":"$(Parameters.solution)",
              "vsVersion": "15.0",
              "msbuildArgs": "/p:OutDir=$(Build.ArtifactStagingDirectory) /p:SkipInvalidConfigurations=true /p:LastDeploymentGitTagName=$(LastDeploymentGitTagName) /p:CustomGitDeltaDeploy=$(EnableGitDeltaDeploy) /p:CullProjectFiles=$(CullProjectFiles)",
              "platform": "$(BuildPlatform)",
              "configuration": "$(BuildConfiguration)",
              "clean": "false",
              "maximumCpuCount": "true",
              "restoreNugetPackages": "false",
              "msbuildArchitecture": "x86",
              "logProjectEvents": "true",
              "createLogFile": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Delete files from $(Build.ArtifactStagingDirectory)",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "refName": "DeleteFiles7",
            "task": {
              "id": "b7e8b412-0437-4065-9371-edc5881de25b",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "SourceFolder": "$(Build.ArtifactStagingDirectory)",
              "Contents": "*.dll\n*.pdb\n*.config\n*.xml\nApp_Config"
            }
          },
		   {  
			  "environment":{  

			  },
			  "enabled":true,
			  "continueOnError":false,
			  "alwaysRun":false,
			  "displayName":"Remove Files From TDS Packages",
			  "timeoutInMinutes":0,
			  "condition":"succeeded()",
			  "task":{  
				 "id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
				 "versionSpec":"2.*",
				 "definitionType":"task"
			  },
			  "inputs":{  
				 "targetType":"filePath",
				 "filePath":"$(Build.ArtifactStagingDirectory)\\SitecoreVSTS\\Scripts\\Build\\RemoveFilesFromTDSPackage.ps1",
				 "arguments":"-pathToPackages \"$(Build.ArtifactStagingDirectory)\\_Packages\"",
				 "script":"",
				 "errorActionPreference":"stop",
				 "failOnStderr":"false",
				 "ignoreLASTEXITCODE":"false",
				 "workingDirectory":"$(Build.ArtifactStagingDirectory)\\SitecoreVSTS\\Scripts\\Build"
			  }
		   },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": true,
            "displayName": "Publish Artifact: drop",
            "timeoutInMinutes": 0,
            "condition": "succeededOrFailed()",
            "refName": "PublishBuildArtifacts_4",
            "task": {
              "id": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "PathtoPublish": "$(Build.ArtifactStagingDirectory)",
              "ArtifactName":"$(Parameters.ArtifactName)",
              "ArtifactType": "Container",
              "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)",
              "Parallel": "false",
              "ParallelCount": "8"
            }
          }
        ],
        "name": "Build Sitecore Solution",
        "refName": "Build_Sitecore_Solution",
        "condition": "succeeded()",
        "target": {
          "executionOptions": {
            "type": 0
          },
          "allowScriptsAuthAccessOption": false,
          "type": 1
        },
        "jobAuthorizationScope": "projectCollection",
        "jobCancelTimeoutInMinutes": 1
      }
    ],
    "type": 1
  },
  "repository": {},
  "processParameters":{  
      "inputs":[  
         {  
            "aliases":[  

            ],
            "options":{  

            },
            "properties":{  

            },
            "name":"solution",
            "label":"Path to solution or packages.config",
            "defaultValue":"**\\*.sln",
            "required":true,
            "type":"filePath",
            "helpMarkDown":"The path to the Visual Studio solution file or NuGet packages.config",
            "visibleRule":"",
            "groupName":""
         },
         {  
            "aliases":[  

            ],
            "options":{  

            },
            "properties":{  

            },
            "name":"ArtifactName",
            "label":"Artifact Name",
            "defaultValue":"drop",
            "required":true,
            "type":"string",
            "helpMarkDown":"The name of the artifact to create.",
            "visibleRule":"",
            "groupName":""
         }
      ]
   },
  "quality": 1,
  "authoredBy": {},
  "drafts": [],
  "queue":{},
  "id": 1,
  "name": "Base Build",
  "path": "\\",
  "type": 2,
  "queueStatus": 0,
  "project": {
    "id":"UPDATE-THIS-TO-YOUR-PROJECT-ID"
  }
}